[{"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\index.js":"1","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\App.js":"2","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\Posts.js":"3","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Form\\Form.js":"4","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\Post\\Post.js":"5","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\styles.js":"6","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\styles.js":"7","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\Post\\styles.js":"8","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Form\\styles.js":"9","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\reducers\\index.js":"10","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\reducers\\posts.js":"11","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\actions\\posts.js":"12","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\api\\index.js":"13","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\utils\\actionTypes.js":"14","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\NavBar\\NavBar.js":"15","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\NavBar\\styles.js":"16","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Home\\Home.js":"17","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Auth\\Auth.js":"18","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Home\\homeStyles.js":"19","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Auth\\styles.js":"20","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\CustomInput\\Input.js":"21","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\CustomInput\\Icon.js":"22","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\reducers\\auth.js":"23","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\actions\\auth.js":"24"},{"size":513,"mtime":1612199393879,"results":"25","hashOfConfig":"26"},{"size":589,"mtime":1612447529464,"results":"27","hashOfConfig":"26"},{"size":912,"mtime":1612694113321,"results":"28","hashOfConfig":"26"},{"size":3208,"mtime":1612531216865,"results":"29","hashOfConfig":"26"},{"size":3230,"mtime":1612536483559,"results":"30","hashOfConfig":"26"},{"size":218,"mtime":1612447158665,"results":"31","hashOfConfig":"26"},{"size":280,"mtime":1612198544942,"results":"32","hashOfConfig":"26"},{"size":1018,"mtime":1612262285159,"results":"33","hashOfConfig":"26"},{"size":453,"mtime":1612266896701,"results":"34","hashOfConfig":"26"},{"size":162,"mtime":1612453264959,"results":"35","hashOfConfig":"26"},{"size":624,"mtime":1612263973781,"results":"36","hashOfConfig":"26"},{"size":1342,"mtime":1612263913897,"results":"37","hashOfConfig":"26"},{"size":888,"mtime":1612538484374,"results":"38","hashOfConfig":"26"},{"size":346,"mtime":1612523103232,"results":"39","hashOfConfig":"26"},{"size":2449,"mtime":1612693513519,"results":"40","hashOfConfig":"26"},{"size":989,"mtime":1612693470728,"results":"41","hashOfConfig":"26"},{"size":1350,"mtime":1612694046710,"results":"42","hashOfConfig":"26"},{"size":5102,"mtime":1612531676215,"results":"43","hashOfConfig":"26"},{"size":218,"mtime":1612694139803,"results":"44","hashOfConfig":"26"},{"size":844,"mtime":1612451739177,"results":"45","hashOfConfig":"26"},{"size":1082,"mtime":1612450862007,"results":"46","hashOfConfig":"26"},{"size":514,"mtime":1612451356758,"results":"47","hashOfConfig":"26"},{"size":437,"mtime":1612520237888,"results":"48","hashOfConfig":"26"},{"size":908,"mtime":1612527158874,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"swvuwq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\index.js",[],["103","104"],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\App.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\Posts.js",["105","106"],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Form\\Form.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\Post\\Post.js",["107","108"],"import React, { useState, useEffect } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, likePost } from '../../../store/actions/posts';\r\n\r\nimport {\r\n  ThumbUpAlt,\r\n  Delete,\r\n  MoreHoriz,\r\n  ThumbUpAltOutlined,\r\n} from '@material-ui/icons';\r\nexport default function Post({ post, setCurrentId }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const Likes = () => {\r\n    if (post.likes.length > 0) {\r\n      return post.likes.find(\r\n        (like) => like === user?.result?.googleId || user?.result?._id\r\n      ) ? (\r\n        <>\r\n          <ThumbUpAlt fontSize=\"small\" />{' '}\r\n          {post.likes.length === 1\r\n            ? `${post.likes.length} Like`\r\n            : `${post.likes.length} Likes`}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <ThumbUpAltOutlined fontSize=\"small\" />{' '}\r\n          {post.likes.length === 1\r\n            ? `${post.likes.length} Like`\r\n            : `${post.likes.length} Likes`}\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <ThumbUpAltOutlined fontSize=\"small\" /> Like\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={post.selectedFile}\r\n        title={post.title}\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.name}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        {user?.result?.googleId === post?.creator ||\r\n        user?.result?._id === post?.creator ? (\r\n          <Button\r\n            style={{ color: '#ffffff' }}\r\n            size=\"small\"\r\n            onClick={() => setCurrentId(post._id)}\r\n          >\r\n            <MoreHoriz fontSize=\"default\" />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {post.tags.map((tag) => {\r\n            return <span key={tag}> #{tag} </span>;\r\n          })}\r\n        </Typography>\r\n      </div>\r\n      <CardContent>\r\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n          {post.title}\r\n        </Typography>\r\n        <Typography variant=\"caption\">{post.message}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(likePost(post._id))}\r\n        >\r\n          <Likes />\r\n        </Button>\r\n        {user?.result?.googleId === post?.creator ||\r\n        user?.result?._id === post?.creator ? (\r\n          <Button\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            onClick={() => dispatch(deletePost(post._id))}\r\n          >\r\n            <Delete fontSize=\"small\" /> Delete\r\n          </Button>\r\n        ) : null}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\styles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\styles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Posts\\Post\\styles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\Form\\styles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\reducers\\index.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\reducers\\posts.js",["109"],"import * as actionTypes from '../utils/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CREATE: {\r\n      return [...posts, action.payload];\r\n    }\r\n    case actionTypes.FETCH_ALL: {\r\n      return action.payload;\r\n    }\r\n    case actionTypes.UPDATE:\r\n    case actionTypes.LIKE:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n\r\n    case actionTypes.DELETE: {\r\n      return posts.filter((post) => {\r\n        return post._id !== action.payload;\r\n      });\r\n    }\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\actions\\posts.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\api\\index.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\utils\\actionTypes.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\NavBar\\NavBar.js",["110","111"],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\NavBar\\styles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Home\\Home.js",["112"],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Auth\\Auth.js",["113","114"],"import React, { useState, useEffect } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { LockOutlined } from '@material-ui/icons';\r\nimport Input from '../../components/CustomInput/Input';\r\nimport Icon from '../../components/CustomInput/Icon';\r\n// import * as actionTypes from '../../store/utils/actionTypes';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { signUp, signIn, googleLogIn } from '../../store/actions/auth';\r\nconst initialState = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n};\r\nexport default function Auth() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [userData, setUserData] = useState(initialState);\r\n  useEffect(() => {\r\n    let userData = localStorage.getItem('profile');\r\n    if (!userData) {\r\n      return;\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(userData);\r\n    if (isSignUp) {\r\n      dispatch(signUp(userData, history));\r\n    } else {\r\n      dispatch(signIn(userData, history));\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleShowPass = () => {\r\n    setShowPass((prevShowPass) => !prevShowPass);\r\n  };\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n    dispatch(googleLogIn(result, token, history));\r\n  };\r\n  const googleFailure = (error) => {\r\n    console.log(error);\r\n    alert('Google Sign in failed, try again later');\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlined />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{isSignUp ? `Sing Up` : `Sign In`}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignUp && (\r\n              <>\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  half\r\n                  type=\"text\"\r\n                  handleChange={handleChange}\r\n                />\r\n\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  half\r\n                  type=\"text\"\r\n                  handleChange={handleChange}\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={!showPass ? 'password' : 'text'}\r\n              handleShowPass={handleShowPass}\r\n            />\r\n            {isSignUp && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                handleChange={handleChange}\r\n                type={!showPass ? 'password' : 'text'}\r\n                handleShowPass={handleShowPass}\r\n              />\r\n            )}\r\n          </Grid>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignUp ? 'Sign Up' : 'Sign In'}\r\n          </Button>\r\n          <GoogleLogin\r\n            clientId=\"142791182489-7j3bk2oo33nd004ub6ala8hmtm7j1ual.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <Button\r\n                className={classes.googleButton}\r\n                variant=\"contained\"\r\n                fullWidth\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                startIcon={<Icon />}\r\n              >\r\n                LogIn with Google\r\n              </Button>\r\n            )}\r\n            onSuccess={googleSuccess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n          <Grid container justify=\"flex-start\">\r\n            <Grid item>\r\n              <Button\r\n                onClick={() => {\r\n                  setIsSignUp((prevIsSignUp) => !prevIsSignUp);\r\n                  setShowPass(false);\r\n                }}\r\n              >\r\n                {isSignUp\r\n                  ? 'Already have an account? Sign In '\r\n                  : 'New Here? Create an account'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Home\\homeStyles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\views\\Auth\\styles.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\CustomInput\\Input.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\components\\CustomInput\\Icon.js",[],"D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\reducers\\auth.js",["115"],"import * as actionTypes from '../utils/actionTypes';\r\n\r\nexport default (authData = {}, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH: {\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.payload }));\r\n      return action?.payload;\r\n    }\r\n    case actionTypes.LOGOUT: {\r\n      localStorage.removeItem('profile');\r\n      return (authData = null);\r\n    }\r\n    default:\r\n      return authData;\r\n  }\r\n};\r\n","D:\\Workspace\\MERN Stack\\social-media\\client\\src\\store\\actions\\auth.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":3,"column":1,"nodeType":"127","endLine":25,"endColumn":3},{"ruleId":"120","severity":1,"message":"128","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":26,"column":6,"nodeType":"131","endLine":26,"endColumn":16,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":25,"column":6,"nodeType":"131","endLine":25,"endColumn":8,"suggestions":"134"},{"ruleId":"120","severity":1,"message":"135","line":10,"column":3,"nodeType":"122","messageId":"123","endLine":10,"endColumn":12},{"ruleId":"129","severity":1,"message":"133","line":41,"column":6,"nodeType":"131","endLine":41,"endColumn":8,"suggestions":"136"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":1,"nodeType":"127","endLine":16,"endColumn":3},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'connective' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logOutHandler' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["140"],"'TextField' is defined but never used.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"144","fix":"146"},"Update the dependencies array to be: [location, logOutHandler, user?.token]",{"range":"147","text":"148"},"Update the dependencies array to be: [history]",{"range":"149","text":"150"},{"range":"151","text":"150"},[969,979],"[location, logOutHandler, user?.token]",[820,822],"[history]",[1235,1237]]